"use strict";let ws,hoveredObject,clickedObject,mouseIsDown=!1,rotation=45;const WHITE=11184810,YELLOW=11184640,CYAN=43690,arrowModels=[],arrowNames=["left","right","up","down","forward","backward"],rotations=[{x:.25,y:0,z:0},{x:.25,y:.5,z:0},{x:.25,y:.75,z:0},{x:.25,y:.25,z:0},{x:.25,y:.5,z:.25},{x:.25,y:.5,z:.75}],positions=[{x:-.125,y:0,z:0},{x:.125,y:0,z:0},{x:0,y:.1,z:0},{x:0,y:-.1,z:0},{x:0,y:0,z:-.125},{x:0,y:0,z:.125}];window.addEventListener("load",()=>{screen.keepAwake=!0;const renderer=new THREE.WebGLRenderer({antialias:!0,alpha:!0});renderer.setPixelRatio(window.devicePixelRatio),renderer.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(renderer.domElement),renderer.domElement.addEventListener("click",()=>{(new NoSleep).enable(),window.location.href.includes("localhost")||document.fullscreenEnabled&&renderer.domElement.requestFullScreen()||document.webkitFullscreenEnabled&&renderer.domElement.webkitRequestFullScreen()||document.mozFullScreenEnabled&&renderer.domElement.mozRequestFullScreen()||document.msFullScreenEnabled&&renderer.domElement.msRequestFullScreen()});let vrDisplay,effect=new THREE.VREffect(renderer);effect.separation=0,effect.setSize(window.innerWidth,window.innerHeight),navigator.getVRDisplays&&navigator.getVRDisplays().then(displays=>displays.length&&(vrDisplay=displays[0])),enterVRButton.addEventListener("click",()=>{document.getElementById("controls");enterVRButton.classList.contains("small")?((effect=new THREE.VREffect(renderer)).separation=0,effect.setSize(window.innerWidth,window.innerHeight),enterVRButton.classList.remove("small")):(navigator.userAgent.includes("Mobile VR")?vrDisplay.requestPresent([{source:renderer.domElement}]):((effect=new THREE.StereoEffect(renderer)).separation=0,effect.setSize(window.innerWidth,window.innerHeight)),enterVRButton.classList.add("small"))});const scene=new THREE.Scene,camera=new THREE.PerspectiveCamera(70,window.innerWidth/window.innerHeight,1,1e3);scene.add(camera),camera.position.z=4,camera.position.y=2;let controls=new THREE.OrbitControls(camera,renderer.domElement);controls.target.set(camera.position.x+.15,camera.position.y,camera.position.z),controls.noPan=!0,controls.noZoom=!0;const setOrientationControls=event=>{event.alpha&&((controls=new THREE.VRControls(camera)).update(),window.removeEventListener("deviceorientation",setOrientationControls))};window.addEventListener("deviceorientation",setOrientationControls);const loader=new THREE.ObjectLoader,raycaster=new THREE.Raycaster,mouse=new THREE.Vector2,light=new THREE.DirectionalLight(16777215,.5);light.position.set(0,1,0).normalize(),scene.add(light);for(let a=0;a<6;a++)loader.load("lib/arrow.json",model=>{model.position.x=2*positions[a].x*Math.PI,model.position.y=2*positions[a].y*Math.PI,model.position.z=2*positions[a].z*Math.PI,model.rotation.x=2*rotations[a].x*Math.PI,model.rotation.y=2*rotations[a].y*Math.PI,model.rotation.z=2*rotations[a].z*Math.PI,model.children.forEach(c=>{3==a?(c.material.emissive.setHex(CYAN),clickedObject=model):c.material.emissive.setHex(WHITE)}),arrowModels.push(model),model.data={arrowIndex:a},scene.add(model)});const render=()=>{requestAnimationFrame(render),controls.update(),camera.lookAt(scene.position),camera.updateMatrixWorld(),raycaster.setFromCamera(mouse,camera);const intersects=raycaster.intersectObjects(scene.children,!0);intersects.length?(hoveredObject=intersects[0].object.name.toLowerCase().startsWith("box")?intersects[0].object.parent:intersects[0].object,document.body.style.cursor="pointer",hoveredObject==clickedObject||(mouseIsDown?(clickedObject&&clickedObject.children.forEach(c=>c.material.emissive.setHex(WHITE)),hoveredObject.children.forEach(c=>c.material.emissive.setHex(CYAN)),clickedObject=hoveredObject,console.log("clicked",arrowNames[clickedObject.data.arrowIndex]),ws?ws.send(JSON.stringify({direction:arrowNames[clickedObject.data.arrowIndex],userId:"1234",username:"rob",type:"text",room:roomNameValue,type:"gravity"})):game.shiftGravity(arrowNames[clickedObject.data.arrowIndex])):(arrowModels.forEach(arrow=>{arrow!=clickedObject&&arrow.children.forEach(c=>c.material.emissive.setHex(WHITE))}),hoveredObject!=clickedObject&&hoveredObject.children.forEach(c=>c.material.emissive.setHex(YELLOW))))):(document.body.style.cursor="default",arrowModels&&arrowModels.forEach(arrow=>{arrow!=clickedObject&&arrow.children.forEach(c=>c.material.emissive.setHex(WHITE))}),hoveredObject=null),effect.render(scene,camera)};render();const setRotation=rotation=>{camera.position.x=3*Math.sin(rotation*Math.PI/180),camera.position.z=3*Math.cos(rotation*Math.PI/180)};setRotation(rotation=-45),window.addEventListener("wheel",({deltaY:deltaY})=>{setRotation(rotation=(rotation+5*(deltaY>0?1:-1))%360)}),document.addEventListener("mousedown",event=>{mouseIsDown=!0}),document.addEventListener("mouseup",()=>{mouseIsDown=!1}),document.addEventListener("click",()=>{mouseIsDown=!1}),console.log("hi")});
//# sourceMappingURL=scriptVR.min.js.map